# Root = attacker or defender country
# scope:battle = battle
# scope:attacker = attacking commander
# scope:defender = defending commander
# scope:state = location state
on_battle_started = {
    on_actions = {
        FAE_on_battle_started
    }
}

FAE_on_battle_started = {
    effect = {
        if = {
            # Conditional
            limit = {
                # State must have fort owned by the defender's country or a war ally of the defender's country
                scope:state = {
                    has_building = FAE_building_forts
                    OR = {
                        owner = scope:defender.owner
                        owner = {
                            is_in_war_together = scope:defender.owner
                        }
                    }
                }
                
                # Guard
                # This on_action is fired twice (once for each country) for some reason
                scope:defender = {
                    NOR = {
                        has_modifier = FAE_md_fort_defense_strong
                        has_modifier = FAE_md_fort_defense_weak
                    }
                }
            }
            
            # Attacker has engineers
            if = {
                # Condition
                limit = {
                    scope:attacker = {
                        OR = {
                            commander_pm_usage = {
                                target = owner
                                production_method = FAE_pm_engineers
                                value > 0
                            }
                            commander_pm_usage = {
                                target = owner
                                production_method = FAE_pm_engineers_conscription
                                value > 0
                            }
                        }
                    }
                }
                
                # Calculate fort benefits reduction from engineer usage
                set_local_variable = {
                    name  = attacker_engineer_multiplier
                    value = {
                        add      = FAE_sv_get_attackers_total_engineers_pm_usage
                        multiply = FAE_WEAK_FORT_MAX_DEBUFF
                        subtract = 1
                        multiply = -1
                    }
                }
                
                # Apply sapped fort modifier
                scope:defender = {
                    add_modifier = {
                        name       = FAE_md_fort_defense_weak
                        multiplier = {
                            add = 1 # Necessary despite the modifier having a default value [of 1]. DO NOT DELETE!!!
                            multiply = scope:state.b:FAE_building_forts.modifier:unit_defense_add
                            multiply = local_var:attacker_engineer_multiplier
                        }
                    }
                    add_modifier = {
                        name       = FAE_md_fort_kill_rate_weak
                        multiplier = {
                            add = 1
                            multiply = scope:state.b:FAE_building_forts.modifier:unit_kill_rate_add
                            multiply = local_var:attacker_engineer_multiplier
                        }
                    }
                    add_modifier = {
                        name       = FAE_md_fort_provinces_lost_weak
                        multiplier = {
                            add = 1
                            multiply = scope:state.b:FAE_building_forts.modifier:unit_provinces_lost_mult
                            multiply = local_var:attacker_engineer_multiplier
                        }
                    }
                }
            }
            
            # Attacker does not have engineers
            else = {
                scope:defender = {
                    add_modifier = {
                        name       = FAE_md_fort_defense_strong
                        multiplier = scope:state.b:FAE_building_forts.modifier:unit_defense_add
                    }
                    add_modifier = {
                        name       = FAE_md_fort_kill_rate_strong
                        multiplier = scope:state.b:FAE_building_forts.modifier:unit_kill_rate_add
                    }
                    add_modifier = {
                        name       = FAE_md_fort_provinces_lost_strong
                        multiplier = scope:state.b:FAE_building_forts.modifier:unit_provinces_lost_mult
                    }
                }
            }
        }
    }
}

# TODO: fort battle mortality

# Root = attacker or defender country
# scope:battle = battle
# scope:attacker = attacking commander
# scope:defender = defending commander
# scope:state = location state
on_battle_ended = {
    on_actions = {
        FAE_on_battle_ended
    }
}

FAE_on_battle_ended = {
    effect = {
        #scope:attacker = {
        #}
        scope:defender = {
            # wow this looks gross
            if = {
                limit = {
                    has_modifier = FAE_md_fort_defense_strong
                }
                remove_modifier = FAE_md_fort_defense_strong
            }
            if = {
                limit = {
                    has_modifier = FAE_md_fort_defense_weak
                }
                remove_modifier = FAE_md_fort_defense_weak
            }
            if = {
                limit = {
                    has_modifier = FAE_md_fort_kill_rate_strong
                }
                remove_modifier = FAE_md_fort_kill_rate_strong
            }
            if = {
                limit = {
                    has_modifier = FAE_md_fort_kill_rate_weak
                }
                remove_modifier = FAE_md_fort_kill_rate_weak
            }
            if = {
                limit = {
                    has_modifier = FAE_md_fort_provinces_lost_strong
                }
                remove_modifier = FAE_md_fort_provinces_lost_strong
            }
            if = {
                limit = {
                    has_modifier = FAE_md_fort_provinces_lost_weak
                }
                remove_modifier = FAE_md_fort_provinces_lost_weak
            }
        }
    }
}
