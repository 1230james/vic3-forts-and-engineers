l_english:
    # Battle Conditions
    FAE_battle_condition_attacker_fort_breached: "Fort Breached"
    FAE_battle_condition_defender_fort_breached: "$FAE_battle_condition_attacker_fort_breached$"
    
    FAE_battle_condition_attacker_fort_breached_desc: "This commander has successfully breached some of the enemy's fortifications."
    FAE_battle_condition_defender_fort_breached_desc: "The enemy has successfully breached some of this commander's fortifications."
    
    # Buildings
    fae_building_forts: "Fortifications"
    
    # Character Traits
    FAE_trait_combat_engineer_1: "Combat Engineer"
    FAE_trait_combat_engineer_2: "Experienced Combat Engineer"
    FAE_trait_combat_engineer_3: "Expert Combat Engineer"
    
    FAE_trait_combat_engineer_1_desc: "This commander is knowledgeable in the effective use of combat engineers."
    FAE_trait_combat_engineer_2_desc: "This commander has an expert grasp of the use of combat engineers in warfare."
    FAE_trait_combat_engineer_3_desc: "This commander has truly mastered the art of modern warfare with regards to combat engineers."
    
    # Modifiers I (types)
    state_fae_building_forts_max_level_add:      "$fae_building_forts$ Max Level"
    state_fae_building_forts_max_level_add_desc: "A bonus or penalty to the maximum level of $fae_building_forts$ buildings."
    
    building_input_small_arms_mult: "@small_arms! $small_arms$ $concept_input_mult$"
    building_input_artillery_mult:  "@artillery! $artillery$ $concept_input_mult$"
    building_input_ammunition_mult: "@ammunition! $ammunition$ $concept_input_mult$"
    
    building_input_small_arms_mult_desc: "$concept_input_mult_desc$"
    building_input_artillery_mult_desc:  "$concept_input_mult_desc$"
    building_input_ammunition_mult_desc: "$concept_input_mult_desc$"
    
    character_fae_battle_condition_attacker_fort_breached_mult:      "[GetBattleCondition('FAE_battle_condition_attacker_fort_breached').GetName]$character_battle_condition_suffix$"
    character_fae_battle_condition_attacker_fort_breached_mult_desc: "$character_battle_condition_desc_prefix$[GetBattleCondition('FAE_battle_condition_attacker_fort_breached').GetName]$character_battle_condition_desc_suffix$"
    
    unit_fae_siege_add:      "[concept_FAE_siege]"
    unit_fae_siege_add_desc: "The total [concept_FAE_siege] added for each [concept_unit] participating in a [concept_battle]"
    
    unit_fae_entrenchment_add:      "[concept_FAE_entrenchment]"
    unit_fae_entrenchment_add_desc: "The total [concept_FAE_entrenchment] added for each [concept_unit] participating in a [concept_battle]"
    
    # Modifiers II (modifiers)
    FAE_md_fort_reconstruction: "Fort Construction"
    FAE_md_fort_rearmament:     "Fort Armament"
    FAE_md_fort_recommission:   "Recently Commissioned"
    
    FAE_md_fort_in_battle: "Engaged in Combat"
    
    FAE_md_fort_defense_strong:   "Strong Fortifications"
    FAE_md_fort_defense_mid:      "Partially-Weakened Fortifications"
    FAE_md_fort_defense_weak:     "Weakened Fortifications"
    FAE_md_fort_occupation_speed: "Hampered by Enemy Fortifications"
    
    FAE_md_fort_kill_rate_strong:      "$FAE_md_fort_defense_strong$"
    FAE_md_fort_kill_rate_mid:         "$FAE_md_fort_defense_mid$"
    FAE_md_fort_kill_rate_weak:        "$FAE_md_fort_defense_weak$"
    FAE_md_fort_provinces_lost_strong: "$FAE_md_fort_defense_strong$"
    FAE_md_fort_provinces_lost_weak:   "$FAE_md_fort_defense_weak$"
    
    # Production Method Groups
    FAE_pmg_fort_design:         "Fort Design"
    FAE_pmg_fort_construction:   "Construction Material"
    FAE_pmg_fort_heavy_armament: "Heavy Armament"
    FAE_pmg_fort_small_armament: "Light Armament"
    FAE_pmg_fort_maintenance:    "Operational Status"
    
    # Production Methods
    FAE_pm_bastion_forts:   "Bastion Forts"
    FAE_pm_polygonal_forts: "Polygonal Forts"
    FAE_pm_bunkers:         "Bunkers & Pillboxes"
    
    FAE_pm_wood_palisades: "Wooden Palisades"
    FAE_pm_stone_iron:     "Stone & Iron"
    FAE_pm_steel_concrete: "Steel & Concrete"
    
    FAE_pm_parapets:  "Parapet Cannons"
    FAE_pm_casemates: "Artillery Casemates"
    FAE_pm_turrets:   "Gun Turrets"
    
    FAE_pm_small_arms:        "$small_arms$"
    FAE_pm_gatling_guns:      "$handcranked_machine_gun$"
    FAE_pm_auto_machine_guns: "$automatic_machine_guns$"
    
    FAE_pm_normal:     "Normal Operations"
    FAE_pm_mothballed: "Mothballed"
    
    FAE_pm_fort_design_mothballed:       "$FAE_pm_mothballed$"
    FAE_pm_fort_construction_mothballed: "$FAE_pm_mothballed$"
    FAE_pm_fort_heavy_arms_mothballed:   "$FAE_pm_mothballed$"
    FAE_pm_small_arms_mothballed:        "$FAE_pm_mothballed$"
    
    # Mobilization Options
    FAE_mo_combat_engineers:      "Combat Engineers"
    FAE_mo_combat_engineers_desc: "Specially-trained engineers on the battlefield will help us adapt the terrain to our needs and overcome enemy defenses."
    
    # Concepts
    concept_FAE_siege:        "Siege Ability"
    concept_FAE_entrenchment: "Fort Entrenchment"
    FAE_txt_added_by_FAE:     "#italic This is a feature of the #blue Forts & Engineers#! mod.#!"
    
    FAE_txt_siege:    "[concept_FAE_siege]"
    FAE_txt_entrench: "[concept_FAE_entrenchment]"
    FAE_txt_forts:    "[GetBuildingType('fae_building_forts').GetName]"
    
    FAE_txt_battles: "At the start of every [concept_battle] taking place in a [concept_state] with a $FAE_txt_forts$ [concept_building], the total $FAE_txt_siege$ and $FAE_txt_entrench$ is calculated from the number of [Concept('concept_unit', '$concept_units$')] in the battle on the attacking and defending sides, respectively."
    
    FAE_txt_siege_stats:   "The per-[Concept('concept_unit', 'unit')] $FAE_txt_siege$ is calculated from:\n$FAE_txt_siege_stats_1$\n$FAE_txt_siege_stats_2$\n$FAE_txt_siege_stats_3$\n$FAE_txt_siege_stats_4$\n$FAE_txt_siege_stats_5$\n$FAE_txt_siege_stats_6$\n$FAE_txt_siege_stats_7$"
    FAE_txt_siege_stats_1: "#p +[GetPlayer.MakeScope.ScriptValue('FAE_siege_combat_engies')]#! if its [concept_military_formation] has the [GetMobilizationOption('FAE_mo_combat_engineers').GetName] [concept_mobilization_option] active"
    FAE_txt_siege_stats_2: "#p +[GetPlayer.MakeScope.ScriptValue('FAE_siege_heavy_tank')]#! if it is a [GetCombatUnitType('combat_unit_type_heavy_tank').GetName] [Concept('concept_combat_unit_type', 'Unit')]"
    FAE_txt_siege_stats_3: "#p +[GetPlayer.MakeScope.ScriptValue('FAE_siege_light_tank')]#! if it is a [GetCombatUnitType('combat_unit_type_light_tanks').GetName] [Concept('concept_combat_unit_type', 'Unit')]"
    FAE_txt_siege_stats_4: "#p +[GetPlayer.MakeScope.ScriptValue('FAE_siege_siege_arty')]#! if it is a [GetCombatUnitType('combat_unit_type_siege_artillery').GetName] [Concept('concept_combat_unit_type', 'Unit')]"
    FAE_txt_siege_stats_5: "#p +[GetPlayer.MakeScope.ScriptValue('FAE_siege_shrapnel_arty')]#! if it is a [GetCombatUnitType('combat_unit_type_shrapnel_artillery').GetName] [Concept('concept_combat_unit_type', 'Unit')]"
    FAE_txt_siege_stats_6: "#p +[GetPlayer.MakeScope.ScriptValue('FAE_siege_mobile_arty')]#! if it is a [GetCombatUnitType('combat_unit_type_mobile_artillery').GetName] [Concept('concept_combat_unit_type', 'Unit')]"
    FAE_txt_siege_stats_7: "#p +[GetPlayer.MakeScope.ScriptValue('FAE_siege_cannon_arty')]#! if it is a [GetCombatUnitType('combat_unit_type_cannon_artillery').GetName] [Concept('concept_combat_unit_type', 'Unit')]"
    
    FAE_txt_min_fort_bonus: "#p [Multiply_CFixedPoint( GetPlayer.MakeScope.ScriptValue('FAE_WEAK_FORT_MIN_BONUS'), '(CFixedPoint)100' )]%#!"
    
    concept_FAE_siege_desc: "$FAE_txt_siege$ directly counters [concept_FAE_entrenchment].\n\n$FAE_txt_battles$\n\n$FAE_txt_siege$ acts as a direct reduction of $FAE_txt_entrench$ on a 1-to-1 basis, and the more $FAE_txt_entrench$ is reduced, the smaller the defender bonuses to [concept_defense] & [concept_kill_rate] and the attacker malus to [Concept('concept_occupation', '$concept_battle$ $concept_occupation$')] will be.\n\n$FAE_txt_siege_stats$\n\n$FAE_txt_added_by_FAE$"
    
    concept_FAE_entrenchment_desc: "$FAE_txt_entrench$ measures the effectiveness of $FAE_txt_forts$ being utilized by defending [Concept('concept_unit', 'Units')].\n\n$FAE_txt_battles$\n\nTotal $FAE_txt_entrench$ for a [concept_battle] is determined by taking the total $FAE_txt_entrench$ output from the $FAE_txt_forts$ [concept_building] involved in the [concept_battle] and multiplying it by the total number of defending [Concept('concept_unit', 'Units')] participating in the [concept_battle]. After calculating both values, the attacker's $FAE_txt_siege$ is subtracted from the defender's $FAE_txt_entrench$. This value is divded by the original $FAE_txt_entrench$ value to determine a fraction representing the #v effectiveness#! of $FAE_txt_forts$ in this [concept_battle]. Therefore, as $FAE_txt_siege$ increases, $FAE_txt_forts$ become less effective.\n\nReduced effectiveness of $FAE_txt_forts$ will reduce the defender bonuses to [concept_defense] & [concept_kill_rate] and the attacker malus to [Concept('concept_occupation', '$concept_battle$ $concept_occupation$')] by a certain percentage based on the fraction calculated above. Regardless of how low this fraction is, $FAE_txt_forts$ are guaranteed to be at least $FAE_txt_min_fort_bonus$ effective.\n\n$FAE_txt_added_by_FAE$"
